{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./AttendanceTable.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AttendanceTable=()=>{const[attendanceData,setAttendanceData]=useState([]);const[isAttendanceReady,setIsAttendanceReady]=useState(false);const[isLoading,setIsLoading]=useState(false);// Function to handle file upload\nconst handleFileUpload=file=>{const formData=new FormData();formData.append('file',file);setIsLoading(true);// Show loading while uploading\nfetch('http://localhost:3001/upload',{method:'POST',body:formData}).then(response=>response.json()).then(()=>{// Set the state to fetch attendance after upload completes\nsetIsAttendanceReady(true);}).catch(error=>{console.error('Error uploading file:',error);setIsAttendanceReady(false);}).finally(()=>setIsLoading(false));};// Fetch attendance data from the backend only after upload is complete\nuseEffect(()=>{if(isAttendanceReady){setIsLoading(true);// Show loading while fetching\nfetch(`http://localhost:3001/api/attendance`).then(response=>response.json()).then(data=>{setAttendanceData(data.attendance);}).catch(error=>{console.error('Error fetching attendance data:',error);}).finally(()=>setIsLoading(false));}},[isAttendanceReady]);const renderTableHeader=()=>{if(attendanceData.length===0){return null;}// Extract unique dates from the attendance data\nconst uniqueDates=[...new Set(attendanceData.map(item=>item.date))];return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Student\"}),uniqueDates.map((date,index)=>/*#__PURE__*/_jsx(\"th\",{children:date},index))]});};const renderTableRows=()=>{if(attendanceData.length===0){return null;}// Group attendance data by student\nconst groupedByStudent={};attendanceData.forEach(record=>{const{name,date,present}=record;if(!groupedByStudent[name]){groupedByStudent[name]={};}groupedByStudent[name][date]=present;// Mark attendance for specific dates\n});// Extract unique dates for each student\nconst uniqueDates=[...new Set(attendanceData.map(item=>item.date))];return Object.keys(groupedByStudent).map((studentName,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:studentName}),uniqueDates.map((date,idx)=>/*#__PURE__*/_jsx(\"td\",{className:groupedByStudent[studentName][date]?'present':'absent',children:groupedByStudent[studentName][date]?'Present':'Absent'},idx))]},index));};return/*#__PURE__*/_jsxs(\"div\",{className:\"attendance-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Day-wise Attendance\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>handleFileUpload(e.target.files[0]),disabled:isLoading// Disable file input while loading\n}),isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"attendance-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:attendanceData.length>0&&renderTableHeader()}),/*#__PURE__*/_jsx(\"tbody\",{children:attendanceData.length>0?renderTableRows():/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"100%\",children:\"No attendance data available\"})})})]})]});};export default AttendanceTable;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AttendanceTable","attendanceData","setAttendanceData","isAttendanceReady","setIsAttendanceReady","isLoading","setIsLoading","handleFileUpload","file","formData","FormData","append","fetch","method","body","then","response","json","catch","error","console","finally","data","attendance","renderTableHeader","length","uniqueDates","Set","map","item","date","children","index","renderTableRows","groupedByStudent","forEach","record","name","present","Object","keys","studentName","idx","className","type","onChange","e","target","files","disabled","colSpan"],"sources":["/Users/ishankanodia/Desktop/att/innnovation-lab/frontend/src/AttendanceTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AttendanceTable.css';\n\nconst AttendanceTable = () => {\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [isAttendanceReady, setIsAttendanceReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to handle file upload\n  const handleFileUpload = (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    setIsLoading(true); // Show loading while uploading\n    fetch('http://localhost:3001/upload', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then(() => {\n        // Set the state to fetch attendance after upload completes\n        setIsAttendanceReady(true);\n      })\n      .catch((error) => {\n        console.error('Error uploading file:', error);\n        setIsAttendanceReady(false);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  // Fetch attendance data from the backend only after upload is complete\n  useEffect(() => {\n    if (isAttendanceReady) {\n      setIsLoading(true); // Show loading while fetching\n      fetch(`http://localhost:3001/api/attendance`)\n        .then((response) => response.json())\n        .then((data) => {\n          setAttendanceData(data.attendance);\n        })\n        .catch((error) => {\n          console.error('Error fetching attendance data:', error);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [isAttendanceReady]);\n\n  const renderTableHeader = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n  \n    // Extract unique dates from the attendance data\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n  \n    return (\n      <tr>\n        <th>Student</th>\n        {uniqueDates.map((date, index) => (\n          <th key={index}>{date}</th>\n        ))}\n      </tr>\n    );\n  };\n  \n  const renderTableRows = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n  \n    // Group attendance data by student\n    const groupedByStudent = {};\n    attendanceData.forEach(record => {\n      const { name, date, present } = record;\n      if (!groupedByStudent[name]) {\n        groupedByStudent[name] = {};\n      }\n      groupedByStudent[name][date] = present; // Mark attendance for specific dates\n    });\n  \n    // Extract unique dates for each student\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n  \n    return Object.keys(groupedByStudent).map((studentName, index) => (\n      <tr key={index}>\n        <td>{studentName}</td>\n        {uniqueDates.map((date, idx) => (\n          <td key={idx} className={groupedByStudent[studentName][date] ? 'present' : 'absent'}>\n            {groupedByStudent[studentName][date] ? 'Present' : 'Absent'}\n          </td>\n        ))}\n      </tr>\n    ));\n  };\n  \n  return (\n    <div className=\"attendance-container\">\n      <h2>Day-wise Attendance</h2>\n      <input\n        type=\"file\"\n        onChange={(e) => handleFileUpload(e.target.files[0])}\n        disabled={isLoading} // Disable file input while loading\n      />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <table className=\"attendance-table\">\n          <thead>{attendanceData.length > 0 && renderTableHeader()}</thead>\n          <tbody>\n            {attendanceData.length > 0 ? (\n              renderTableRows()\n            ) : (\n              <tr>\n                <td colSpan=\"100%\">No attendance data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default AttendanceTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}