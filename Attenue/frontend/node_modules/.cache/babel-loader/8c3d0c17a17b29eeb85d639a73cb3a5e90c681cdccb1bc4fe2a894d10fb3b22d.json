{"ast":null,"code":"var _jsxFileName = \"/Users/ishankanodia/Desktop/att/innnovation-lab/frontend/src/AttendanceTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AttendanceTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceTable = () => {\n  _s();\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [isAttendanceReady, setIsAttendanceReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to handle file upload\n  const handleFileUpload = file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsLoading(true); // Show loading while uploading\n    fetch('http://localhost:3001/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(() => {\n      // Set the state to fetch attendance after upload completes\n      setIsAttendanceReady(true);\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n      setIsAttendanceReady(false);\n    }).finally(() => setIsLoading(false));\n  };\n\n  // Fetch attendance data from the backend only after upload is complete\n  useEffect(() => {\n    if (isAttendanceReady) {\n      setIsLoading(true); // Show loading while fetching\n      fetch(`http://localhost:3001/api/attendance`).then(response => response.json()).then(data => {\n        setAttendanceData(data.attendance);\n      }).catch(error => {\n        console.error('Error fetching attendance data:', error);\n      }).finally(() => setIsLoading(false));\n    }\n  }, [isAttendanceReady]);\n  const renderTableHeader = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n\n    // Extract unique dates from the attendance data\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), uniqueDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTableRows = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n\n    // Group attendance data by student\n    const groupedByStudent = {};\n    attendanceData.forEach(record => {\n      const {\n        name,\n        date,\n        present\n      } = record;\n      if (!groupedByStudent[name]) {\n        groupedByStudent[name] = {};\n      }\n      groupedByStudent[name][date] = present; // Mark attendance for specific dates\n    });\n\n    // Extract unique dates for each student\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n    return Object.keys(groupedByStudent).map((studentName, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: studentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), uniqueDates.map((date, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: groupedByStudent[studentName][date] ? 'present' : 'absent',\n        children: groupedByStudent[studentName][date] ? 'Present' : 'Absent'\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Day-wise Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => handleFileUpload(e.target.files[0]),\n      disabled: isLoading // Disable file input while loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"attendance-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: attendanceData.length > 0 && renderTableHeader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attendanceData.length > 0 ? renderTableRows() : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"100%\",\n            children: \"No attendance data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceTable, \"TYi5fZJ7y5tOklSn+sJyuKILOb0=\");\n_c = AttendanceTable;\nexport default AttendanceTable;\nvar _c;\n$RefreshReg$(_c, \"AttendanceTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AttendanceTable","_s","attendanceData","setAttendanceData","isAttendanceReady","setIsAttendanceReady","isLoading","setIsLoading","handleFileUpload","file","formData","FormData","append","fetch","method","body","then","response","json","catch","error","console","finally","data","attendance","renderTableHeader","length","uniqueDates","Set","map","item","date","children","fileName","_jsxFileName","lineNumber","columnNumber","index","renderTableRows","groupedByStudent","forEach","record","name","present","Object","keys","studentName","idx","className","type","onChange","e","target","files","disabled","colSpan","_c","$RefreshReg$"],"sources":["/Users/ishankanodia/Desktop/att/innnovation-lab/frontend/src/AttendanceTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AttendanceTable.css';\n\nconst AttendanceTable = () => {\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [isAttendanceReady, setIsAttendanceReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to handle file upload\n  const handleFileUpload = (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    setIsLoading(true); // Show loading while uploading\n    fetch('http://localhost:3001/upload', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then(() => {\n        // Set the state to fetch attendance after upload completes\n        setIsAttendanceReady(true);\n      })\n      .catch((error) => {\n        console.error('Error uploading file:', error);\n        setIsAttendanceReady(false);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  // Fetch attendance data from the backend only after upload is complete\n  useEffect(() => {\n    if (isAttendanceReady) {\n      setIsLoading(true); // Show loading while fetching\n      fetch(`http://localhost:3001/api/attendance`)\n        .then((response) => response.json())\n        .then((data) => {\n          setAttendanceData(data.attendance);\n        })\n        .catch((error) => {\n          console.error('Error fetching attendance data:', error);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [isAttendanceReady]);\n\n  const renderTableHeader = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n  \n    // Extract unique dates from the attendance data\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n  \n    return (\n      <tr>\n        <th>Student</th>\n        {uniqueDates.map((date, index) => (\n          <th key={index}>{date}</th>\n        ))}\n      </tr>\n    );\n  };\n  \n  const renderTableRows = () => {\n    if (attendanceData.length === 0) {\n      return null;\n    }\n  \n    // Group attendance data by student\n    const groupedByStudent = {};\n    attendanceData.forEach(record => {\n      const { name, date, present } = record;\n      if (!groupedByStudent[name]) {\n        groupedByStudent[name] = {};\n      }\n      groupedByStudent[name][date] = present; // Mark attendance for specific dates\n    });\n  \n    // Extract unique dates for each student\n    const uniqueDates = [...new Set(attendanceData.map(item => item.date))];\n  \n    return Object.keys(groupedByStudent).map((studentName, index) => (\n      <tr key={index}>\n        <td>{studentName}</td>\n        {uniqueDates.map((date, idx) => (\n          <td key={idx} className={groupedByStudent[studentName][date] ? 'present' : 'absent'}>\n            {groupedByStudent[studentName][date] ? 'Present' : 'Absent'}\n          </td>\n        ))}\n      </tr>\n    ));\n  };\n  \n  return (\n    <div className=\"attendance-container\">\n      <h2>Day-wise Attendance</h2>\n      <input\n        type=\"file\"\n        onChange={(e) => handleFileUpload(e.target.files[0])}\n        disabled={isLoading} // Disable file input while loading\n      />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <table className=\"attendance-table\">\n          <thead>{attendanceData.length > 0 && renderTableHeader()}</thead>\n          <tbody>\n            {attendanceData.length > 0 ? (\n              renderTableRows()\n            ) : (\n              <tr>\n                <td colSpan=\"100%\">No attendance data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default AttendanceTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}